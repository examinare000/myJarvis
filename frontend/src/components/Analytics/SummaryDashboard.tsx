import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  CircularProgress,\n  Alert,\n  LinearProgress,\n  Avatar,\n  Chip,\n} from '@mui/material';\nimport {\n  TrendingUp as TrendingUpIcon,\n  Assignment as TaskIcon,\n  Event as EventIcon,\n  Mood as MoodIcon,\n  Timeline as TimelineIcon,\n} from '@mui/icons-material';\nimport analyticsService, { SummaryAnalytics } from '../../services/analyticsService';\n\nconst SummaryDashboard: React.FC = () => {\n  const [analytics, setAnalytics] = useState<SummaryAnalytics | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    fetchAnalytics();\n  }, []);\n\n  const fetchAnalytics = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const data = await analyticsService.getSummaryAnalytics();\n      setAnalytics(data);\n    } catch (error) {\n      setError('サマリーデータの取得に失敗しました');\n      console.error('Summary analytics fetch error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getMoodEmoji = (mood: string): string => {\n    const moodMap: Record<string, string> = {\n      'happy': '😊',\n      'excited': '🤩',\n      'content': '😌',\n      'neutral': '😐',\n      'tired': '😴',\n      'stressed': '😰',\n      'sad': '😢',\n      'angry': '😠',\n      'anxious': '😟',\n      'focused': '🎯',\n      'creative': '🎨',\n      'grateful': '🙏',\n    };\n    return moodMap[mood.toLowerCase()] || '😐';\n  };\n\n  const getCompletionRateColor = (rate: number): 'error' | 'warning' | 'success' => {\n    if (rate < 50) return 'error';\n    if (rate < 80) return 'warning';\n    return 'success';\n  };\n\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '400px' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert severity=\"error\" sx={{ mt: 2 }}>\n        {error}\n      </Alert>\n    );\n  }\n\n  if (!analytics) {\n    return (\n      <Alert severity=\"info\" sx={{ mt: 2 }}>\n        サマリーデータがありません\n      </Alert>\n    );\n  }\n\n  const { summary } = analytics;\n  const maxActivityValue = Math.max(...summary.activityTrend.map(a => a.total));\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        📈 週間サマリー\n      </Typography>\n      \n      <Typography variant=\"subtitle1\" color=\"text.secondary\" sx={{ mb: 3 }}>\n        過去7日間のアクティビティ概要\n      </Typography>\n\n      {/* Key Metrics Cards */}\n      <Grid container spacing={3} sx={{ mb: 4 }}>\n        <Grid item xs={12} sm={6} md={3}>\n          <Card sx={{ height: '100%' }}>\n            <CardContent>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\n                <TaskIcon color=\"primary\" sx={{ fontSize: 40 }} />\n                <Box>\n                  <Typography variant=\"h4\">{summary.tasks.total}</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    総タスク数\n                  </Typography>\n                </Box>\n              </Box>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                <Typography variant=\"body2\">完了率:</Typography>\n                <Chip\n                  label={`${summary.tasks.completionRate}%`}\n                  color={getCompletionRateColor(summary.tasks.completionRate)}\n                  size=\"small\"\n                />\n              </Box>\n              <LinearProgress\n                variant=\"determinate\"\n                value={summary.tasks.completionRate}\n                color={getCompletionRateColor(summary.tasks.completionRate)}\n                sx={{ mt: 1, height: 6, borderRadius: 3 }}\n              />\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={3}>\n          <Card sx={{ height: '100%' }}>\n            <CardContent>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\n                <MoodIcon color=\"secondary\" sx={{ fontSize: 40 }} />\n                <Box>\n                  <Typography variant=\"h4\">{summary.mood.entries}</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    ライフログ記録\n                  </Typography>\n                </Box>\n              </Box>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                <Typography variant=\"body2\">主要ムード:</Typography>\n                <Chip\n                  label={`${getMoodEmoji(summary.mood.dominant)} ${summary.mood.dominant}`}\n                  size=\"small\"\n                  sx={{ bgcolor: 'secondary.light', color: 'secondary.contrastText' }}\n                />\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={3}>\n          <Card sx={{ height: '100%' }}>\n            <CardContent>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\n                <EventIcon color=\"info\" sx={{ fontSize: 40 }} />\n                <Box>\n                  <Typography variant=\"h4\">{summary.events.total}</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    カレンダーイベント\n                  </Typography>\n                </Box>\n              </Box>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                <Typography variant=\"body2\">予定:</Typography>\n                <Chip\n                  label={`${summary.events.upcoming} upcoming`}\n                  color=\"info\"\n                  size=\"small\"\n                />\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={3}>\n          <Card sx={{ height: '100%' }}>\n            <CardContent sx={{ textAlign: 'center' }}>\n              <TrendingUpIcon sx={{ fontSize: 60, color: 'success.main', mb: 1 }} />\n              <Typography variant=\"h5\" color=\"success.main\" sx={{ fontWeight: 'bold' }}>\n                活発\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                今週の活動レベル\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Activity Trend */}\n      <Grid container spacing={3}>\n        <Grid item xs={12} lg={8}>\n          <Paper sx={{ p: 3 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 3 }}>\n              <TimelineIcon color=\"primary\" />\n              <Typography variant=\"h6\">週間アクティビティトレンド</Typography>\n            </Box>\n            \n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n              {summary.activityTrend.map((day, index) => (\n                <Box key={index}>\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>\n                    <Typography variant=\"body2\" sx={{ fontWeight: 'bold', minWidth: 80 }}>\n                      {new Date(day.date).getMonth() + 1}/{new Date(day.date).getDate()}\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      合計: {day.total}\n                    </Typography>\n                  </Box>\n                  \n                  <Box sx={{ position: 'relative' }}>\n                    <LinearProgress\n                      variant=\"determinate\"\n                      value={day.total > 0 ? (day.total / maxActivityValue) * 100 : 0}\n                      sx={{\n                        height: 24,\n                        borderRadius: 2,\n                        backgroundColor: 'grey.200',\n                        '& .MuiLinearProgress-bar': {\n                          backgroundColor: 'primary.main',\n                          borderRadius: 2,\n                        },\n                      }}\n                    />\n                    <Box sx={{\n                      position: 'absolute',\n                      top: 0,\n                      left: 0,\n                      right: 0,\n                      bottom: 0,\n                      display: 'flex',\n                      alignItems: 'center',\n                      paddingX: 1,\n                      gap: 1,\n                    }}>\n                      {day.tasks > 0 && (\n                        <Chip label={`T:${day.tasks}`} size=\"small\" sx={{ height: 16, fontSize: '0.6rem' }} />\n                      )}\n                      {day.lifelogs > 0 && (\n                        <Chip label={`L:${day.lifelogs}`} size=\"small\" color=\"secondary\" sx={{ height: 16, fontSize: '0.6rem' }} />\n                      )}\n                      {day.events > 0 && (\n                        <Chip label={`E:${day.events}`} size=\"small\" color=\"info\" sx={{ height: 16, fontSize: '0.6rem' }} />\n                      )}\n                    </Box>\n                  </Box>\n                </Box>\n              ))}\n            </Box>\n          </Paper>\n        </Grid>\n\n        {/* Quick Stats */}\n        <Grid item xs={12} lg={4}>\n          <Paper sx={{ p: 3, height: '100%' }}>\n            <Typography variant=\"h6\" gutterBottom>今週のハイライト</Typography>\n            \n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>\n              <Box>\n                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                  🎯 生産性スコア\n                </Typography>\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                  <CircularProgress\n                    variant=\"determinate\"\n                    value={summary.tasks.completionRate}\n                    size={60}\n                    color={getCompletionRateColor(summary.tasks.completionRate)}\n                  />\n                  <Typography variant=\"h4\" color={`${getCompletionRateColor(summary.tasks.completionRate)}.main`}>\n                    {summary.tasks.completionRate}%\n                  </Typography>\n                </Box>\n              </Box>\n\n              <Box>\n                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                  📝 記録習慣\n                </Typography>\n                <Typography variant=\"h6\">\n                  {summary.mood.entries > 0 ? '良好' : '改善の余地あり'}\n                </Typography>\n                <Typography variant=\"caption\" color=\"text.secondary\">\n                  {summary.mood.entries}件のライフログ記録\n                </Typography>\n              </Box>\n\n              <Box>\n                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                  📅 スケジュール管理\n                </Typography>\n                <Typography variant=\"h6\">\n                  {summary.events.total > 0 ? 'アクティブ' : '計画を立てましょう'}\n                </Typography>\n                <Typography variant=\"caption\" color=\"text.secondary\">\n                  {summary.events.upcoming}件の予定\n                </Typography>\n              </Box>\n            </Box>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default SummaryDashboard;